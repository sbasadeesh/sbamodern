import React, { useEffect } from 'react';
import AOS from 'aos';
import 'aos/dist/aos.css';

function Ourservices() {
  useEffect(() => {
    AOS.init({
      duration: 800,
      easing: 'ease-out-cubic',
      once: true,
      offset: 100,
    });
  }, []);

  const services = [
    {
      id: 1,
      title: "AI-Powered Automation",
      description: "Transform your operations with intelligent automation driven by advanced AI algorithms.",
      icon: (
        <svg className="w-10 h-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
        </svg>
      ),
      animation: 'fade-right',
    },
    {
      id: 2,
      title: "Cloud Integration",
      description: "Seamlessly integrate your systems with scalable cloud solutions for maximum efficiency.",
      icon: (
        <svg className="w-10 h-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
        </svg>
      ),
      animation: 'fade-left',
    },
    {
      id: 3,
      title: "Process Optimization",
      description: "Streamline workflows with precision automation for unparalleled business performance.",
      icon: (
        <svg className="w-10 h-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.556 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
      ),
      animation: 'fade-up',
    },
  ];

  const ServiceCard = ({ service, index }) => {
    return (
      <div
        className="relative hover:cursor-pointer bg-black/90 backdrop-blur-sm rounded-2xl p-8 border border-[#1F1D1A] overflow-hidden group"
        data-aos={service.animation}
        data-aos-delay={index * 600}
      >
        <div
          className="absolute -inset-px pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity duration-300
            before:content-[''] before:absolute before:-inset-1 before:rounded-2xl
            before:bg-gradient-to-r before:from-white/30 before:via-white/50 before:to-white/30
            before:animate-[borderInfinity_3s_linear_infinite]"
        />
        <style jsx>{`
          @keyframes borderInfinity {
            0% {
              clip-path: polygon(0 0, 50% 0, 50% 0, 0 0, 0 50%, 0 50%, 0 0);
            }
            25% {
              clip-path: polygon(50% 0, 100% 0, 100% 50%, 100% 50%, 50% 50%, 50% 0, 50% 0);
            }
            50% {
              clip-path: polygon(100% 50%, 100% 100%, 50% 100%, 50% 100%, 50% 50%, 100% 50%, 100% 50%);
            }
            75% {
              clip-path: polygon(0 100%, 50% 100%, 0 50%, 0 50%, 0 50%, 0 100%, 0 100%);
            }
            100% {
              clip-path: polygon(0 0, 50% 0, 50% 0, 0 0, 0 50%, 0 50%, 0 0);
            }
          }
        `}</style>
        <div
          className="absolute inset-0 bg-gradient-to-br from-[#1F1D1A]/20 to-black opacity-0 group-hover:opacity-100 transition-opacity duration-500"
        />
        <div className="relative z-10 flex flex-col h-full">
          <div className="w-16 h-16 bg-[#1F1D1A] rounded-xl flex items-center justify-center mb-6 group-hover:scale-110 group-hover:rotate-10 transition-transform duration-300">
            {service.icon}
          </div>
          <h3 className="text-2xl font-bold text-white mb-4">{service.title}</h3>
          <p className="text-gray-400 mb-6 flex-grow">{service.description}</p>
          <button
            className="relative hover:cursor-pointer inline-flex items-center justify-center px-6 py-3 font-medium text-white bg-[#1F1D1A] rounded-lg overflow-hidden transition-all duration-1000 group-hover:bg-gray-200 group-hover:text-black w-full"
          >
            <span className="absolute inset-0 w-0 bg-gray-200 transition-all duration-1000 ease-out group-hover:w-full"></span>
            <span className="relative z-10">Learn More</span>
          </button>
        </div>
      </div>
    );
  };

  return (
    <div className="min-h-screen bg-black text-white py-20 px-4 relative overflow-hidden">
      <div
        className="absolute inset-0"
        style={{
          backgroundImage: `
            radial-gradient(circle at 10% 20%, rgba(31, 29, 26, 0.2) 0%, transparent 50%),
            radial-gradient(circle at 90% 80%, rgba(31, 29, 26, 0.2) 0%, transparent 50%)
          `,
        }}
      />
      <div className="max-w-6xl mx-auto relative">
        <h1
          className="text-5xl md:text-7xl font-bold text-center mb-12"
          data-aos="fade-up"
          data-aos-duration="800"
        >
          Our <span className=" bg-clip-text text-transparent text-white">Services</span>
        </h1>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {services.map((service, index) => (
            <ServiceCard key={service.id} service={service} index={index} />
          ))}
        </div>
      </div>
    </div>
  );
}

export default Ourservices;